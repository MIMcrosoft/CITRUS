* {
    --mainPamps: #F15E60;
    --mainPampsFade: rgba(241,94,96,0.1);
    --tablePampsFade: rgba(241,94,96,0.1);
    --tableTangsFade: rgba(244,141,66,0.1);
    --tableClemsFade: rgba(248,178,46,0.1);
    --textBlack: #5d5d5d;
    --white: #FFFFFF;
    --gradient: linear-gradient(166deg, rgba(240,93,95,1) 0%, rgba(247,177,45,1) 100%);
    --shadow: 0px 4px 10px 4px rgba(98, 98, 98, 0.3);
    --smallerShadow: 0px 2px 5px 2px rgba(98, 98, 98, 0.2);
    font-family: "Maven Pro", sans-serif;
    box-sizing: border-box;
}

html {
    font-size: 20px;
    color: var(--textBlack);
}

body {
  width: 100%;
  height: 100%;
}

h1 {
    font-size: 1.5rem;
    font-weight: 800;
    color: var(--mainPamps);
}

h2 {
    font-size: 1.25rem;
    font-weight: 600;
    color: var(--textBlack);
}

p {
    font-size: 1rem;
    font-weight: 400;
    color: var(--textBlack);
}

a {
    color: var(--mainPamps);
    text-decoration: none;
}

a:hover {
    font-weight: 500;
    text-decoration: underline;
}

.tooltip {
  display: inline;
  color: var(--mainPamps);
  margin-left: 0.5rem;
}

.tippy-box[data-theme~='citrus'] {
  background-color: var(--white);
  color: var(--textBlack);
  box-shadow: var(--shadow);
  font-family: "Maven Pro", sans-serif;
  font-size: 1rem;
}

.tippy-box[data-theme~='citrus'][data-placement^='top'] > .tippy-arrow::before {
  border-top-color: var(--white);
}
.tippy-box[data-theme~='citrus'][data-placement^='bottom'] > .tippy-arrow::before {
  border-top-color: var(--white);
}
.tippy-box[data-theme~='citrus'][data-placement^='left'] > .tippy-arrow::before {
  border-top-color: var(--white);
}
.tippy-box[data-theme~='citrus'][data-placement^='right'] > .tippy-arrow::before {
  border-top-color: var(--white);
}

button, .btn {
    font-size: 1rem;
    font-weight: 600;
    padding: 0.4rem;
    padding-inline: 2.5rem;
    border-radius: 2rem;
    display: block;
    box-shadow: 0px 4px 10px 4px rgba(98, 98, 98, 0.3);
    transition: all 0.5s ease, margin padding padding-inline 0.1ms;
}

.btnInline {
    display: inline;
}

.btnStretch {
    width: 100%;
}

.btnPrimary {
    border: none;
    padding: 0.55rem;
    padding-inline: 2.65rem;
    background: var(--gradient);
    color: #FFFFFF;
    
}

.btnPrimary:hover, .btnPrimaryHover {
    background: var(--mainPampsFade);
    border:0.15rem solid var(--mainPamps);
    color: var(--mainPamps);
    padding: 0.4rem;
    padding-inline: 2.5rem;
}

.btnSecondary {
    position: relative;
    border: none;
    z-index: 0;
    margin: 0.15rem;
}

.btnSecondary span {
    background: var(--gradient);
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
}

.btnSecondary::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    margin: -0.15rem;
    background: var(--gradient);
    z-index: -1;
    border-radius: inherit; 
    box-sizing: border-box;
}

.btnSecondary::after {
    content: '';
    position: absolute;
    top: 0.15em;
    left: 0.15em;
    right: 0.15em;
    bottom: 0.15em;
    margin: -0.15rem;
    background: var(--white);
    z-index: -1;
    border-radius: inherit;
}

.btnSecondary:hover, .btnSecondaryHover {
    background: var(--white);
    border:0.15rem solid var(--mainPamps);
    color: var(--mainPamps);
    margin: 0;
}

.btnSecondary:hover span, .btnSecondaryHover span {
    color: var(--mainPamps);
}

.btnSecondary:hover::before, .btnSecondaryHover::before{
    background: transparent;
}

.btnSecondary:hover::after, .btnSecondaryHover::after{
    background: var(--mainPampsFade);
}

input[type="text"] {
    height: 2rem;
    border-radius: 2rem;
    padding-inline: 1rem;
    font-size: 1rem;
    box-shadow: var(--shadow);
    border: none;
}

input:focus {
    outline:3px solid rgba(211, 211, 211, 0.256);
}

.select {
    position: relative;
    user-select: none;
  }
  
.select select {
  display: none;
}
  
.select-selected {
  height: 2rem;
  background-color: var(--white);
  box-shadow: var(--shadow);
  border-radius: 2rem;
}
  
  /* Style the arrow inside the select element: */
.select-selected:after {
  position: absolute;
  content: "";
  top: 0.9rem;
  right: 15px;
  width: 0;
  height: 0;
  border: 6px solid transparent;
  border-color: var(--mainPamps) transparent transparent transparent;
}
  
.select-selected.select-arrow-active {
  border-radius: 1rem 1rem 0 0;
}

/* Point the arrow upwards when the select box is open (active): */
.select-selected.select-arrow-active:after {
  border-color: transparent transparent var(--mainPamps) transparent;
  top: 0.6rem;
}

.select-arrow-active + .select-items {
  max-height: 230px;
  box-shadow: var(--shadow);
  opacity: 1;
}

.select-search .select-arrow-active + .select-items {
  max-height: 270px;
  box-shadow: var(--shadow);
  opacity: 1;
}
  
  /* style the items (options), including the selected item: */
.select-items div,.select-selected {
  color: var(--textBlack);
  font-size: 1rem;
  font-weight: 400;
  padding: 8px 16px;
  border: 1px solid transparent;
  border-color: transparent transparent rgba(0, 0, 0, 0.1) transparent;
  cursor: pointer;
}
  
  /* Style items (options): */
.select-items {
  position: relative;
  background-color: var(--white);
  top: 100%;
  left: 0;
  right: 0;
  z-index: 99;
  max-height: 0px;
  border-radius: 0 0 1rem 1rem;
  box-shadow: none;
  overflow: auto;
  clip-path: inset(0px -20px -20px -20px);
  opacity: 0;
  transition: max-height 0.3s, border 0.3s, opacity 1ms;
}

.select-items::-webkit-scrollbar {
  display: none;
}
  
.same-as-selected {
  font-weight: 600 !important;
}

.select-items div:hover {
  background-color: var(--mainPampsFade) !important;
}

.select-search-bar {
  position: sticky;
  top: 0;
  width: 100%;
  padding: 0!important;
  box-shadow: var(--smallerShadow)!important;
  border: 1px solid transparent;
  border-color: transparent transparent rgba(0, 0, 0, 0.1) transparent;
}

.select-search-clear {
  position: absolute;
  color: var(--mainPamps);
  font-weight:bolder;
  font-size: 1.2rem;
  line-height: 1.2rem;
  right: 0.7rem;
  top: 0.3rem;
}

.select-search-bar-input {
  width: 100%;
  border-radius: 0!important;
  box-shadow: none!important;
  color: var(--textBlack);
  font-size: 1rem;
  font-weight: 400;
  padding: 8px 16px!important;
  border: 1px solid transparent;
  border-color: transparent transparent rgba(0, 0, 0, 0.1) transparent;
}

.select-items .select-noResults:hover {
  background-color: var(--white)!important;
}

.select-noResults {
  display: none;
  cursor: default!important;
}

.checkboxContainer {
    display: flex;
    position: relative;
    height: 2rem;
    padding-left: 2.75rem;
    cursor: pointer;
    user-select: none;
    align-items: center;
  }
  
  /* Hide the browser's default checkbox */
  .checkboxContainer input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
  }
  
  /* Create a custom checkbox */
  .checkboxContainer .checkmark {
    position: absolute;
    top: 0;
    left: 0;
    height: 2rem;
    width: 2rem;
    background: var(--white);
    box-shadow: var(--shadow);
    border-radius: 0.6rem;
  }
  
  /* On mouse-over, add a grey background color */
  .checkboxContainer:hover input ~ .checkmark {
    background: var(--mainPampsFade);
  }
  
  /* When the checkbox is checked, add a blue background */
  .checkboxContainer input:checked ~ .checkmark {
    background: var(--gradient);
  }
  
  /* Create the checkmark/indicator (hidden when not checked) */
  .checkboxContainer .checkmark:after {
    content: "";
    position: absolute;
    display: none;
  }
  
  /* Show the checkmark when checked */
  .checkboxContainer input:checked ~ .checkmark:after {
    display: block;
  }
  
  /* Style the checkmark/indicator */
  .checkboxContainer .checkmark:after {
    left: 0.7rem;
    top: 0.35rem;
    width: 0.4rem;
    height: 0.8rem;
    border: solid white;
    border-width: 0 5px 5px 0;
    -webkit-transform: rotate(45deg);
    -ms-transform: rotate(45deg);
    transform: rotate(45deg);
  }

.radioContainer {
    display: flex;
    position: relative;
    height: 2rem;
    padding-left: 2.75rem;
    cursor: pointer;
    user-select: none;
    align-items: center;
}

/* Hide the browser's default radio button */
.radioContainer input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

/* Create a custom radio button */
.radioContainer .checkmark {
    position: absolute;
    top: 0;
    left: 0;
    height: 2rem;
    width: 2rem;
    background: var(--white);
    box-shadow: var(--shadow);
    border-radius: 50%;
}

/* On mouse-over, add a grey background color */
.radioContainer:hover input ~ .checkmark {
  background: var(--mainPampsFade);
}

/* When the radio button is checked, add a blue background */
.radioContainer input:checked ~ .checkmark {
  background: var(--gradient);
}

/* Create the indicator (the dot/circle - hidden when not checked) */
.radioContainer .checkmark:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the indicator (dot/circle) when checked */
.radioContainer input:checked ~ .checkmark:after {
  display: block;
}

/* Style the indicator (dot/circle) */
.radioContainer .checkmark:after {
  top: 0.65rem;
  left: 0.65rem;
  width: 0.7rem;
  height: 0.7rem;
  border-radius: 50%;
  background: white;
}

.air-datepicker{
  --adp-background-color-hover: var(--mainPampsFade)!important;
  --adp-color-secondary: var(--mainPamps)!important;
  --adp-accent-color: var(--mainPamps)!important;
  --adp-day-name-color: var(--mainPamps)!important;
  --adp-cell-background-color-selected: var(--mainPamps)!important;
  --adp-cell-background-color-selected-hover: var(--mainPamps)!important;
}

table {
  width: 100%;
  border-collapse: collapse;
  color: var(--mainPamps);
}

th, td {
  border-bottom: 1px solid var(--mainPamps);
  padding: 0.2rem;
}

th {
  text-align: start;
  font-weight: 500;
}

tr {
  background-color: var(--tablePampsFade);
}

table tr:nth-child(1) {
  background-color: transparent;
}

tr.pamps * {
  background-color: var(--tablePampsFade);
}

tr.tangs * {
  background-color: var(--tableTangsFade);
}

tr.clems * {
  background-color: var(--tableClemsFade);
}

/* Style the tab */
.tab {
  overflow: hidden;
  display: flex;

}

/* Style the buttons that are used to open the tab content */
.tab button {
  width: 100%;
  background-color: inherit;
  float: left;
  border: none;
  outline: none;
  cursor: pointer;
  transition: 0.3s;
  box-shadow: none;
  border-radius: 0;
  color: var(--mainPamps);
}

/* Change background color of buttons on hover */
.tab button:hover {
  background-color: var(--mainPampsFade);
}

/* Create an active/current tablink class */
.tab button.active {
  border-bottom: 3px solid var(--mainPamps);
}

/* Style the tab content */
.tabcontent {
  display: none;
}

.tab + div {
  display: block;
}

/* Style the button that is used to open and close the collapsible content */
.collapsible {
  background-color: var(--white);
  color: var(--textBlack);
  cursor: pointer;
  padding: 18px;
  width: 100%;
  border: none;
  text-align: left;
  outline: none;
}

/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */
.collapsible:hover {
  background-color: var(--mainPampsFade);
}

.collapsible:after {
  content: '\002B';
  color: var(--mainPamps);
  font-size: 2rem;
  line-height: 1rem;
  font-weight: 600;
  float: right;
  margin-left: 1.5rem;
}

.collapsible.active:after {
  content: '\002D';
  color: var(--mainPamps);
  font-size: 2rem;
  line-height: 1rem;
  font-weight: 600;
  float: right;
  margin-left: 1.5rem;
}

.collapsible.active {
  border-radius: 2rem 2rem 0 0;
  border-bottom: 1px solid rgba(0, 0, 0, 0.1);
  
}

/* Style the collapsible content. Note: hidden by default */
.collapsibleContent {
  padding: 0 18px;
  max-height: 0;
  overflow: hidden;
  background-color: var(--white);
  border-radius: 0 0 2rem 2rem;
  opacity:0;
  transition: max-height 0.8s, border 0.3s, opacity 1ms;
}

.collapsible.active + .collapsibleContent {
  max-height: 500px;
  box-shadow: var(--shadow);
  clip-path: inset(0px -20px -20px -20px);
  opacity:1;
}

.modal {
  display: none; /* Hidden by default */
  position: fixed; /* Stay in place */
  z-index: 1; /* Sit on top */
  left: 0;
  top: 0;
  width: 100%; /* Full width */
  height: 100%; /* Full height */
  overflow: auto; /* Enable scroll if needed */
  background-color: rgb(0,0,0); /* Fallback color */
  background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
}

/* Modal Content/Box */
.modalContent {
  position: relative;
  background-color: var(--white);
  margin: auto;
  top: 50%;
  transform: translateY(-50%);
  padding: 0;
  width: 80%;
  max-width: 600px;
  border-radius:2rem;
  box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);
  animation-name: animatetop;
  animation-duration: 0.4s;
}

/* Add Animation */
@keyframes animatetop {
  from {top: 30%; opacity: 0}
  to {top: 50%; opacity: 1}
}

/* The Close Button */
.close {
  color: var(--mainPamps);
  font-size: 1.7rem;
  font-weight: 800;
  cursor: pointer;
  user-select: none;
}

.modalHeader {
  padding: 0.5rem 2rem 0 2rem;
  color: white;
  display: flex;
  justify-content: space-between;
  align-items: center;
  line-height: 1rem;
}

/* Modal Body */
.modalBody {
  padding: 0 2rem;
}

.modalBody p {
  margin: 0.5rem;
  margin-inline: 0;
}

/* Modal Footer */
.modalFooter {
  padding: 1.5rem 2rem 1.5rem 2rem;
  display: flex;
  flex-wrap: wrap;
  justify-content: end;
  column-gap: 1.5rem;
  row-gap: 1rem;
}

.modalFooter * {
  flex-grow: 1;
}